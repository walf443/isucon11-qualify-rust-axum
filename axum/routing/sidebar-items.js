initSidebarItems({"fn":[["any","Route requests with the given handler regardless of the method."],["any_service","Route requests to the given service regardless of its method."],["delete","Route `DELETE` requests to the given handler."],["delete_service","Route `DELETE` requests to the given service."],["get","Route `GET` requests to the given handler."],["get_service","Route `GET` requests to the given service."],["head","Route `HEAD` requests to the given handler."],["head_service","Route `HEAD` requests to the given service."],["on","Route requests with the given method to the handler."],["on_service","Route requests with the given method to the service."],["options","Route `OPTIONS` requests to the given handler."],["options_service","Route `OPTIONS` requests to the given service."],["patch","Route `PATCH` requests to the given handler."],["patch_service","Route `PATCH` requests to the given service."],["post","Route `POST` requests to the given handler."],["post_service","Route `POST` requests to the given service."],["put","Route `PUT` requests to the given handler."],["put_service","Route `PUT` requests to the given service."],["trace","Route `TRACE` requests to the given handler."],["trace_service","Route `TRACE` requests to the given service."]],"mod":[["future","Future types."]],"struct":[["IntoMakeService","A `MakeService` that produces axum router services."],["MethodFilter","A filter that matches one or more HTTP methods."],["MethodRouter","A [`Service`] that accepts requests based on a [`MethodFilter`] and allows chaining additional handlers and services."],["Route","How routes are stored inside a `Router`."],["Router","The router type for composing handlers and services."]]});